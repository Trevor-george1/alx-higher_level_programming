>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(0, 0)
0

>>> add_integer(14, 0)
14

>>> add_integer(0, 14)
14

>>> add_integer(-2, 2)
0

>>> add_integer(2, -2)
0

>>> add_integer(2)
100

>>> add_integer(2, 3.0) #doctest: +REPORT_NDIFF
5

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer('a', 'b')
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer('a', 42)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer('a')
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(12.3, 9.8) #doctest: +REPORT_NDIFF
21

>>> add_integer(float("nan"), 4)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(10**1000, 10**1000)
Traceback (most recent call last):
OverflowError: int too large to convert to float

>>> add_integer(1, float('inf'))
Traceback (most recent call last):
OverflowErrorError: cannot convert float infinity to integer

>>> add_integer(True, True)
2

>>> add_integer(True, )
99